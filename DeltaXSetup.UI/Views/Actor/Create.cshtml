@model BusinessEntities.ActorEntity

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Actor</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <div class="form-horizontal">  
        <hr />  
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ActorId, htmlAttributes: new { @class = "control-label col-md-2" })
        
        <div class="col-md-10"> 
            @Html.EditorFor(model => model.ActorId, new { htmlAttributes = new { @class = "form-control" } })  
                @Html.ValidationMessageFor(model => model.ActorId, "", new { @class = "text-danger" })  
            </div>  
        </div>

        <div class="form-group">  
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })  
            <div class="col-md-10">  
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })  
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })  
            </div>  
        </div>  
  
        <div class="form-group">  
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })  
            <div class="col-md-10">  
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", placeholder = "Employee Date Of Birth", @readonly = "true" } })  
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })  
            </div>  
        </div>
        <div class="form-group">  
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })  
            <div class="col-md-10">  
                @Html.DropDownListFor(model=>model.Sex, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Male", Value = "1",Selected=true },
                    new SelectListItem{ Text="Female", Value = "2" }
                 }) 
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })  
            </div>  
        </div>

        <div class="form-group">  
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })  
            <div class="col-md-10">  
                @Html.TextAreaFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })  
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })  
            </div>  
        </div>
        <br />
        <div class="form-group">  
            <div class="col-md-offset-2 col-md-10">  
                <input type="submit" value="Create" class="btn btn-default" />  
            </div>  
        </div>  
    </div>  
}  
  
<div>  
    @Html.ActionLink("Back to List", "Index")  
</div>


@section Scripts {
@Scripts.Render("~/bundles/jqueryui")  
@Styles.Render("~/Content/cssjqryUi") 
    @Scripts.Render("~/bundles/jqueryval") 
  
 <script type="text/javascript">  
     $(document).ready(function () {  
         $('input[type=datetime]').datepicker({  
             dateFormat: "dd/M/yy",  
             changeMonth: true,  
             changeYear: true,  
             yearRange: "-60:+0"  
         });  
  
     });  
</script> 
}
